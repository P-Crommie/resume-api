name: Cloud Resume API CI/CD

on:
  pull_request:
    branches:
      - main
    types:
      - closed

permissions:
  id-token: write
  contents: read
  actions: read

env:
  REGISTRY: "522986700920.dkr.ecr.eu-west-1.amazonaws.com"
  REPOSITORY: "cloud-resume-api"

jobs:
  CI:
    if: github.event.pull_request.merged
    runs-on: ubuntu-latest

    steps:
      - name: Clone repo
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - name: Get Version
        id: version
        uses: paulhatch/semantic-version@v5.3.0
        with:
          tag_prefix: "v"
          major_pattern: "(MAJOR)"
          minor_pattern: "(MINOR)"
          version_format: "${major}.${minor}.${patch}-dev${increment}"
          bump_each_commit: false
          bump_each_commit_patch_pattern: ""
          search_commit_body: true
          user_format_type: "csv"

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: "3.12"

      - name: Cache Requirements file
        uses: actions/cache@v2
        id: cache-venv
        with:
          path: venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/requirements*.txt') }}
          restore-keys: |
            ${{ runner.os }}-venv-

      - name: Activate and Install Dependencies into Virtual env
        working-directory: ./app
        run: |
          python -m venv venv
          source venv/bin/activate
          python -m pip install --upgrade pip
          pip install -r requirements.txt
        if: steps.cache-venv.outputs.cache-hit != 'true'

      - name: Run UnitTest
        working-directory: ./app
        run: |
          source venv/bin/activate && pytest
        env:
          TABLE_NAME: test-table

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTION_ROLE }}
          role-session-name: CloudResumeAPI

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: "true"

      - name: Build & Push Image to ECR
        working-directory: ./app
        env:
          REGISTRY: ${{ env.REGISTRY }}
          REPOSITORY: ${{ env.REPOSITORY }}
          TAG: ${{ steps.version.outputs.version }}
        run: |
          docker build -t $REGISTRY/$REPOSITORY:$TAG .
          docker push $REGISTRY/$REPOSITORY:$TAG

    outputs:
      version: ${{ steps.version.outputs.version }}

  CD:
    runs-on: ubuntu-latest
    needs: [CI]
    if: github.ref == 'refs/heads/main'

    steps:
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: eu-west-1
          role-to-assume: ${{ secrets.AWS_GITHUB_ACTION_ROLE }}
          role-session-name: CloudResumeAPI

      - name: Update Lambda function with new image
        run: |
          aws lambda update-function-code --function-name cloud-resume-api --image-uri $REGISTRY/$REPOSITORY:${{ needs.CI.outputs.version }}

  #       - name: Test
  #         run: |
  #           sleep 40
  #           curl http://${{ secrets.SPECIAL_PROJECT_HOST }}:8080

  Report:
    runs-on: ubuntu-latest
    needs: [CI, CD]
    if: ${{ always() }}
    steps:
      - uses: technote-space/workflow-conclusion-action@v3
      - name: Slack Notification
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ env.WORKFLOW_CONCLUSION }}
          fields: repo,message,commit,author,action,eventName,ref,workflow
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
